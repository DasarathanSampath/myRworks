head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data=mpg)
head(airquality)
range(airquality$Ozone, na.rm=TRUE)
hist(airquality$Ozone)
library(swirl)
swirl()
mini
exit
exit()
swirl()
head(airquality)
range(airquality$Ozone, na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab="Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
title(main="Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
?pch
par('pch')
par("lty")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
may<-subset(airquality, Month==5)
points(may$Wind, may$Ozone, col="blue", pch=17)
notmay<-subset(airquality, !Month==5)
notmay<-subset(airquality, Month!=5)
points(notmay$Wind, may$Ozone, col="red", pch=8)
points(notmay$Wind, notmay$Ozone, col="red", pch=8)
legend("topright", c(17,8), c("blue", "red"), c("May", "Other Months"))
legend("topright", pch=c(17,8), col=c("blue", "red"), legend=c("May", "Other Months"))
abline(v= mean(airquality$Wind), lty=2, lwd=2)
abline(v= median(airquality$Wind), lty=2, lwd=2)
par(mfrow(1,2))
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
par(mfrow=c(1,3), mar=c(4,4,2,1), oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main="Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main="Ozone and Temperature")
mtext("Ozone and Weather in New York City")
mtext("Ozone and Weather in New York City", outer = TRUE)
library(swirl)
swirl
swirl()
head(airquality)
xyplot(Ozone~Wind, airquality)
xyplot(Ozone~Wind, airquality, col="red", pch=8, main="Big Apple Data")
xyplot(Ozone~Wind, data=airquality, col="red", pch=8, main="Big Apple Data")
xyplot(Ozone~Wind, data=airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), data=airquality, layout=c(5,1))
xyplot(Ozone~Wind | Month, data=airquality, layout=c(5,1))
p<- xyplot(Ozone~Wind, data = airquality)
print(p)
name(p)
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y-x|f, layout=c(2,1))
xyplot(y~x|f, layout=c(2,1))
v1
v2
myedit("plot1.R")
source("plot1.R", local=TRUE)
source(pathofile="plot1.R", local=TRUE)
source(pathtofile="plot1.R", local=TRUE)
source(pathtofile("plot1.R"), local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabel.R")
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local=TRUE)
xyplot(price~carat |color*cut, data=diamonds, strip=FALSE, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
swirl()
xyplot(price~carat |color*cut, data=diamonds, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
sample(colors(), 10)
pal<- colorRamp(c("red", "blue"))
View(pal)
pal(0)
pal(1)
pal(seq(0,1, len=6))
p1<- colorRampPalette(c("red", "blue"))
p1(2)
p1(seq(0,1, len=6))
p1(seq(0,1,len=6))
p1(6)
0xcc
p2<-colorRampPalette(c("red", "yellow"))
p2(2)
p2(10)
showMe(p1(20))
p2(20)
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p3(c("blue","green"), alpha=0.5)
p3 <- colorRampPalette(c("blue","green"), alpha=0.5)
p3(5)
plot(x, y, pch=19, col=rgb(0,0.5,0.5))
plot(x, y, pch=19, col=rgb(0,0.5,0.5,0.3))
cols<-brewer.pal(3, "BuGn")
showMe(cols)
pal<- colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano, col=pal(20))
image(volcano, col=p1(20))
library(swirl)
swirl()
str(mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, color=drv, geom=c("point", "smooth"))
qplot(y=hwy, data=mpg, color=drv)
myhigh
qplot(drv, hwy, data=mpg, geom="boxplot")
qplot(drv, hwy, data=mpg, geom="boxplot", color = manufacturer)
qplot(hwy, data=mpg, fill=drv)
qplot(displ, hwy, data=mpg, facets = .~drv)
qplot(hwy, data=mpg, facets = drv~., binwidth=2)
qplot(displ, hwy, data=mpg, geom=c("point", "smooth"), facets=.~drv)
ggplot(data=mpg, mapping=aes(displ, hwy))
ggplot(mpg, aes(displ, hwy))
g <- ggplot(mpg, aes(displ, hwy))
g
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink", size=4, alpha=1/2)
g+geom_point(size=4, alpha=1/2, aes(color=drv))
g+geom_point(size=4, alpha=1/2, aes(color=drv))+ labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv))+ labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(size=2, alpha=1/2, aes(color=drv))+ geom_smoot(size=4, linetype=3, method="lm", se=FALSE)
g+geom_point(size=2, alpha=1/2, aes(color=drv))+ geom_smooth(size=4, linetype=3, method="lm", se=FALSE)
g+geom_point(aes(color=drv))+theme_bw("Times")
g+geom_point(aes(color=drv))+theme_bw(base_family = "Times")
plot(myx, myy, type="l", ylim=c(-3,3))
g<- ggplot(testdat, aes(myx, myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g<- ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(formula=drv~cyl, margins=TRUE)
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")+labs(x="Displacement", y="Highway Mileage", title="Swirl Rules!")
library(swirl)
swirl()
str(diamonds)
qplot(price, data=diamonds)
range(diamonds$price)
qplot(price, data=diamonds, binwidth=18497/30)
brk
counts
qplot(price, data=diamonds, binwidth=18497/30, fill=cut())
qplot(price, data=diamonds, binwidth=18497/30, fill=cut
qplot(price, data=diamonds, binwidth=18497/30, fill=cut)
qplot(price, data=diamonds, geom="density")
qplot(price, data=diamonds, geom="density", color=cut)
qplot(carat, price, data=diamonds)
qplot(carat, price, data=diamonds, shape=cut)
qplot(carat, price, data=diamonds, color=cut)
qplot(carat, price, data=diamonds, color=cut, geom_smooth(method="lm"))
qplot(carat, price, data=diamonds, color=cut)+ geom_smooth(method="lm")
qplot(carat, price, data=diamonds, color=cut, facets=.~cut)+ geom_smooth(method="lm")
g<-ggplot(diamonds, aes(depth, price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints<- quantile(diamonds$carat, seq(0,1,length=4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g<-ggplot(diamonds, aes(depth, price))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm", size=3, color="pink")
ggplot(diamonds, aes(carat, price))+geom_boxplot()+facet_grid(.~cut)
library(swirl)
swirl()
swirl()
swirl()
dist(dataFrame)
hc<-hclust(distxy)
hc
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=0.4, col="red")
5
12
abline(h=0.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
coinFlip <- rbinom(1,size=1,prob=0.5)
dataMatrix[i,] <- dataMatrix[i,] + rep(c(0,3),each=5)
dataMatrix[]<- rnorm(400, mean=0, sd=1)
dataMatrix <- rnorm(400, mean=0, sd=1)
dataMatrix
dataMatrix <- matrix(rnorm(400, mean=0, sd=1), 10,40)
dataMatrix
head(dataMatrix)
dataMatrix <- matrix(rnorm(400, mean=0, sd=1), 40,10)
head(dataMatrix)
dataMatrix[i,] <- dataMatrix[i,] + rep(c(0,3),each=5)
dataMatrix[1,] <- dataMatrix[1,] + rep(c(0,3),each=5)
head(dataMatrix)
rep(c(0,3), each=5)
library(swirl)
swirl()
View(ssd)
sum(ssd$subject)
sum(table(ssd$subject))
install.packages(knitr)
install.packages("knitr")
load("~/Coursera/Reproducible Research/.RData")
View(fatal_data_sort_filter)
grand_total_fatal <- sum(fatal_data_sort$total_fatal)
grand_total_injury <- sum(injury_data_sort$total_injury)
for(i in 1:nrow(fatal_data_sort_filter)){
fatal_data_sort_filter$Percent[i] <- round(100*fatal_data_sort_filter$total_fatal[i]/grand_total_fatal, digits = 2)}
library(dplyr)
prop_data <- select(raw_data, EVTYPE, PROPDMG, PROPDMGEXP)
for(i in nrow(prop_data)){
if(prop_data$PROPDMGEXP="k"){
for(i in 1:nrow(prop_data)){
if(prop_data$PROPDMGEXP="k"){
for(i in 1:nrow(prop_data)){
if(prop_data$PROPDMGEXP=="k"){
prop_data$Prop_Dmg_total=prop_data$PROPDMG*1000{
for(i in 1:nrow(prop_data)){
if(prop_data$PROPDMGEXP=="k"){
prop_data$Prop_Dmg_total=prop_data$PROPDMG*1000}
if(prop_data$PROPDMGEXP=="M"){
prop_data$Prop_Dmg_total=prop_data$PROPDMG*1000000}
if(prop_data$PROPDMGEXP=="B"){
prop_data$Prop_Dmg_total=prop_data$PROPDMG*1000000000}
else{prop_data$Prop_Dmg_total=prop_data$PROPDMG}
}
for(i in 1:nrow(prop_data)){
if(prop_data$PROPDMGEXP[i]=="B"){
prop_data$Prop_Dmg_total[i]=prop_data$PROPDMG[i]*1000000000}
if(prop_data$PROPDMGEXP[i]=="M"){
prop_data$Prop_Dmg_total[i]=prop_data$PROPDMG[i]*1000000}
if(prop_data$PROPDMGEXP[i]=="k"){
prop_data$Prop_Dmg_total[i]=prop_data$PROPDMG[i]*1000}
else{prop_data$Prop_Dmg_total[i]=prop_data$PROPDMG[i]}
}
library(swirl)
swirl()
library(swirl)
swirl()
30/36
1-3/36
deck
52
4/52
0
12/52
3/52
1/51
7/51
2/51
0.16
.16
0.64
0.64
mypdf
mypdf(1.6)
integrate(mypdf, 0, 1.6)
1/4
1/8
1
1.414214
0.997*0.001
0.985*(1-0.001)
(1-0.0985)*(1-0.001)
0.985*0.001
(1-0.985)*(1-0.001)
0.000997/(0.000997+0.014985)
library(swirl)
swilr()
swilr
swirl()
1/2
3.5
expect_dice()
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
0.5*(edh+edl)
integrate(myfunc, 0)
integrate(myfunc, 0, 1)
integrate(myfunc, 0, 2)
spop
mean(spop)
allsam
apply(allsam, 1, mean)
mean(smeans)
nosim<-10
n<-10
rnorm(10)
rnorm(nosim*10)
rnorm(nosim*n)
matrix(rnorm(nosim*n), nosim)
matrixxx<-matrix(rnorm(nosim*n), nosim)
View(matrixxx)
nosim<-100
matrixxx<-matrix(rnorm(nosim*n), nosim)
View(matrixxx)
matrixxx<-matrix(runif(nosim*n), nosim)
?runif
swirl()
swirl
library(swirl)
swirl()
dice_sqr
ex2_fair <- dice_sqr*dice_fair
ex2_fair <- sum(dice_sqr*dice_fair)
ex2_fair-3.5^2
sum(dice_sqr*dice_high) - dhl^2
sum(dice_sqr*dice_high) - edl^2
sum(dice_sqr*dice_high) - edh^2
sd(apply(matrix(rnorm(10000),1000), 1, mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/sqrt(10)
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1, 10000, TRUE),1000),1,mean))
0.8^3*0.2^2
choose(5,3)*0.8^3*0.2^2+choose(5,4)*0.8^4*0.2^1+choose(5,5)*0.8^5*0.2^0
pbinom(2, 5, 0.8, lower.tail = FALSE)
qnorm(0.1)
0
qnorm(0.975, mean=3, sd=2)
3+1.96*2
qnorm(1200, mean=1020, sd=50, lower.tail = FALSE)
pnorm(1200, mean=1020, sd=50, lower.tail = FALSE)
pnorm(3.6, lower.tail = FALSE)
pnorm((1200-1020)/50, lower.tail = FALSE)
qnorm(0.75,1020,50, lower.tail = TRUE)
0.47
pnorm(qnorm(0.53))
qnorm(pnorm(0.53))
ppois(3,(2.5*4))
ppois(3,2.5*4)
ppois(5, 1000*0.01)
ppois(5, 1000, 0.01)
pbinom(5, 1000, .01)
ppois(5, 1000*0.01)
library(swirl)
swirl()
coinPlot(n=10)
coinPlot(n=10000)
qnorm(95)
qnorm(.95)
0.6+c(-1,1)*qnorm(0.975)*sqrt(0.6(1-0.6)/100)
qnorm(0.975)*sqrt(0.6(1-0.6)/100)
qnorm(0.975)
qnorm(0.975)*sqrt(0.6*(1-0.6)/100)
0.6+c(-1,1)*qnorm(0.975)*sqrt(0.6*(1-0.6)/100)
x$conf.int
binom.test(60,100)
binom.test(60,100)$conf.int
mywald(0.2)
ACCompar(20)
lamb<- 5/94.32
lamb+c(-1,1)*qnorm(0.975)*sqrt(lamb)
lamb+c(-1,1)*qnorm(0.975)*sqrt(lamb/94.32)
poisson.test(5,94.32)$conf
runif(1000)
runif(10)
?runif
rnorm(10)
?rnorm
70-80/10
70-80
-
pnorm(-1)
pnorm(70, mean=80, sd=1)
pnorm(70, mean=80, sd=1, lower.tail = FALSE)
pnorm(70, mean=80, sd=10, lower.tail = FALSE)
pnorm(70, mean=80, sd=10, lower.tail = TRUE)
qnorm(0.975, mean=1100, sd=75, lower.tail = TRUE)
qnorm(0.975, mean=1100, sd=75, lower.tail = FALSE)
pnorm(-1, lower.tail = FALSE)
pnorm(-1, lower.tail = TRUE)
data(sleep)
head(sleep)
sleep
g1<-sleep$extra[1:10]
g2<-sleep$extra[11:20]
g1
difference<-g2-g1
t.test(difference)
t.test(g2, g1, paired = TRUE)
library(datasets)
data("ChickWeight")
force(ChickWeight)
head(ChickWeight)
library(reshape2)
wideCW <- dcast(ChickWeight, Diet+Chick~Time, value.var = "weight")
head(wideCW'')
head(wideCW)
wideCW
names(wideCW)[-(1:2)]
names(wideCW)[-(1:2)] <- paste("time", names(wideCW)[-(1:2)], sep="")
head(wideCW)
library(dplyr)
wideCW <- muate(wideCW, gain=time21-time0)
wideCW <- mutate(wideCW, gain=time21-time0)
head(wideCW)
wideCW
wideCW14<-subset(wideCW, Diet %in% c(1,4))
wideCW14
library(swirl)
swirl()
2
4/5
15
qt(0.95,15)
dim(fs)
t.test(fs$sheight, fs$fheight, paired = TRUE)
11.7885*sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
0.03515625
0.035
0.144
mybin[7]=.144 and mybin[8]=.035
8
library(swirl)
swirl()
pt(q=2.5, df=15, lower.tail = FALSE)
qnorm(0.95)
qt(0.99)
qnorm(03.99)
qnorm(0.99)
pnorm(2)
pnorm(2, lower.tail = FALSE)
mybin
pbinom(6,size = 8, prob = 0.5, lower.tail = FALSE)
pbinom(7, size = 8, prob = 0.5, lower.tail = TRUE)
ppois(9, 5, lower.tail = FALSE)
1100+c(-1,1)*qt(0.975,8)*30/sqrt(9)
0-(-2)*sqrt(9)/qt(0.975,8)
9*06^29*0.68^2
(9*06^29*0.68^2)/18
(9*06^2+9*0.68^2)/18
3-5+c(-1,1)*qt(0.975, 18)*18.2312/sqrt(20)
sqrt(18.2312)
3-5+c(-1,1)*qt(0.975, 18)*4.269801/sqrt(20)
n1<-10
m1<-3
v1<-0.6
n2<-10
m2<-5
5-3+c(-1,1)*qt(0.975, 18)*4.269801/sqrt(20)
v2<-0.68
p<- 0.95+(1-0.95)/2
t<-qt(p,df=n1=n2-2)
t<-qt(p,df=n1n2-2)
t<-qt(p,df=n1+n2-2)
qt(0.975,18)
md<-m1-m2
mse<-(v1+v2)/2
se<-sqrt(2*mse/n1)
3-5+c(-1,1)*qt(0.975,18)*sqrt(0.64*2/10)
md-t*se
3**2
(0.5^2+4)2
(0.5^2+4)/2
4-6+c(-1,1)*qnorm(0.975)*sqrt(2*2.125/100)
6-4+c(-1,1)*qnorm(0.975)*sqrt(2*2.125/100)
(1.5^2+1.8^2)/2
-3-1+c(-1,1)*qt(0.95,16)*sqrt(2*2.745/9)
sqrt((8*1.5^2+8*1.8^2)/16)
-3-1+c(-1,1)*qt(0.95,16)*1.656804/sqrt(9+9)
-3-1+c(-1,1)*qt(0.95,16)*1.656804*sqrt(1/9+1/9)
setwd("~/myworks")
tabledata <- read.csv("2014_UPLOAD.csv")
View(tabledata)
library(kableExtra)
kable(tabledata)
paged_table(tabledata, options = list(rows.print=15))
library(rmarkdown)
paged_table(tabledata, options = list(rows.print=15))
